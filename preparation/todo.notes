You have to design a Cache ..,
expiration time is given along with the priority data needs to be kept .. 
You have to design the Cache



You should have knowledge about Caching , 
Data Structure to optimize the problem & Basic fundamental.. 
Plain/ Simple Cache will not do

Eviction should be based upon expiration then priority like that you have to design
Glassdoor also has the same question but the solution is not present..

They gave example of catche memory utilisation along with removal criteria
at a time only certain number of catche can be available what if new catche comes? 
Logic needed to be implemented based on given criterias
Basically indepth software development skills are checked
Nothing more.. Purely software development skills demonstration and live test
this is precisely about PEC round happening in nxt week



Developing a component using DSA
LRU case

They will be assessing based upon these parameters;
-> How you handle edge case
-> How you used DS & collection 
-> How you implement the solution 

Link for LRU Preparation: https://www.geeksforgeeks.org/lru-cache-implementation/
LRU Case is all about these 3 cases - Questions would be based upon these 3 cases each;

Expiration 
Priority
Least used / recently used
Keeping Strong hold on Trees & Binary search Trees for solving this problem

Using DSA how will approach faster results

Therefore your approach for retrieveing faster results is very prominent here for solving all the given cases
binary trees
link list
different eviction strategy
hashmap
internal hasing work 
how to implement heap
LRU
Comparater ka defination
how to handle Collisions
This might be discussed with you in all tech discussion
We need to evict an expire  item
Least possible used item
How to implement hashmap 
How to find index in array
How does hashing work
How to manage collusion
How to implement heap 
Linklist
LRU